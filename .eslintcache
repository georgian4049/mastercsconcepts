[{"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\index.js":"1","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\App.js":"2","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\store\\index.js":"3","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\pages\\Login.js":"4","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\Layout.js":"5","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\routing\\PrivateRoute.js":"6","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\index.js":"7","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\actions\\types.js":"8","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\utils\\mock.js":"9","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\AppBar.jsx":"10","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\Sidebar.jsx":"11","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\TopicContent.jsx":"12","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\Body.jsx":"13","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\WrongPage.jsx":"14","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\platformReducer.js":"15","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\AppBarLinks.jsx":"16","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\index.jsx":"17","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\Popover.jsx":"18","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\Card.jsx":"19","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\editor\\index.jsx":"20","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\editor\\EditingBox.jsx":"21","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\SpeedDial.jsx":"22","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\PreviewModal.jsx":"23","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\Display.jsx":"24","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\TextEditor.jsx":"25"},{"size":524,"mtime":1611252711691,"results":"26","hashOfConfig":"27"},{"size":2221,"mtime":1614441437287,"results":"28","hashOfConfig":"27"},{"size":568,"mtime":1611252711703,"results":"29","hashOfConfig":"27"},{"size":4453,"mtime":1612900957369,"results":"30","hashOfConfig":"27"},{"size":1670,"mtime":1613203448066,"results":"31","hashOfConfig":"27"},{"size":1350,"mtime":1612971781962,"results":"32","hashOfConfig":"27"},{"size":337,"mtime":1611396303232,"results":"33","hashOfConfig":"27"},{"size":226,"mtime":1612597930122,"results":"34","hashOfConfig":"27"},{"size":6111,"mtime":1614279539522,"results":"35","hashOfConfig":"27"},{"size":7019,"mtime":1613104708707,"results":"36","hashOfConfig":"27"},{"size":6377,"mtime":1612973171980,"results":"37","hashOfConfig":"27"},{"size":3824,"mtime":1613207480315,"results":"38","hashOfConfig":"27"},{"size":300,"mtime":1612959466217,"results":"39","hashOfConfig":"27"},{"size":123,"mtime":1612968035864,"results":"40","hashOfConfig":"27"},{"size":741,"mtime":1612969149071,"results":"41","hashOfConfig":"27"},{"size":2280,"mtime":1613150353922,"results":"42","hashOfConfig":"27"},{"size":871,"mtime":1614441496402,"results":"43","hashOfConfig":"27"},{"size":4521,"mtime":1613105390141,"results":"44","hashOfConfig":"27"},{"size":2157,"mtime":1613207394761,"results":"45","hashOfConfig":"27"},{"size":755,"mtime":1613222784617,"results":"46","hashOfConfig":"27"},{"size":917,"mtime":1613223570053,"results":"47","hashOfConfig":"27"},{"size":2620,"mtime":1614278702043,"results":"48","hashOfConfig":"27"},{"size":1164,"mtime":1614365052857,"results":"49","hashOfConfig":"27"},{"size":286,"mtime":1614441756560,"results":"50","hashOfConfig":"27"},{"size":2143,"mtime":1614441549670,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"fvl5vd",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\index.js",[],["115","116"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\App.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\store\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\pages\\Login.js",["117"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\n// import illustration from \"../assets/illustration.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    overflowY: \"hidden\",\r\n  },\r\n  gridContainer: { height: \"100vh\" },\r\n\r\n  image: {\r\n    height: \"102%\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"640px\",\r\n    margin: \"0 auto\",\r\n    backgroundColor: \"3ffffff\",\r\n  },\r\n  form: {\r\n    width: \"80%\", // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"inherit\",\r\n  },\r\n  stack: {\r\n    zIndex: 1,\r\n    color: \"rgb(0,0,0)\",\r\n  },\r\n  loginTitle: {\r\n    zIndex: 1,\r\n    color: \"rgba(0,0,0,0.9)\",\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: true,\r\n  }));\r\n  // const userDetails = useSelector((state) => state.authentication.user);\r\n\r\n  // const [loginForm, setLoginForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    // setLoginForm({ ...loginForm, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    data.preventDefault();\r\n    history.replace(\"/home\");\r\n  };\r\n\r\n  // if (isAuthenticated) {\r\n  //   if (userDetails.role === \"client\") {\r\n  //     history.replace(\"/new-request\");\r\n  //   } else {\r\n  //     history.replace(\"/pending-requests\");\r\n  //   }\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Hidden smDown>\r\n          <Grid item md={8} lg={8} cl={8} className={classes.gridImage}>\r\n            <img alt=\"mastercsconcepts\" className={classes.image} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} md={4} lg={4} xl={4}>\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.stack}>\r\n              MASTERCSCONCEPTS\r\n            </Typography>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              className={classes.loginTitle}\r\n            >\r\n              Login\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"email\"\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={handleChange(\"email\")}\r\n                inputRef={register({\r\n                  required: true,\r\n                  max: 10,\r\n                  min: 5,\r\n                })}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Enter Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"password\")}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disableElevation\r\n                onClick={onSubmit}\r\n                // disabled={!(loginForm.email && loginForm.password)}\r\n              >\r\n                Login\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\Layout.js",["118"],"import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AppBar from \"./AppBar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Body from \"../container/Body\";\r\nimport WrongPage from \"../container/WrongPage\";\r\nimport TopicContent from \"../container/theory/TopicContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    marginLeft: \"0px\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#fff\",\r\n    maxWidth: \"1470px\", //or 1180\r\n    minWidth: \" 200px\",\r\n    marginTop: theme.spacing(0),\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Layout() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n      <Route path=\"/\" component={AppBar} />\r\n      <Route path=\"/\" component={Sidebar} />\r\n      <div className={classes.root}>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`/:courseArea/:courseSubArea/:routeSelected`}\r\n              component={Body}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`/:courseArea/:courseSubArea/:routeSelected/:topicId`}\r\n              component={TopicContent}\r\n            />\r\n            {/* <Route path=\"/\" component={WrongPage} /> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\routing\\PrivateRoute.js",["119"],"import { useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MULTIPLE_VALUES } from \"../../state/actions/types\";\r\nimport { courseList } from \"../../utils/mock\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: true,\r\n  }));\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const currentUrl = history.location.pathname.split(\"/\");\r\n    if (\r\n      courseList[currentUrl[1]] &&\r\n      courseList[currentUrl[1]].find((i) => i.name === currentUrl[2])\r\n    ) {\r\n      const index = courseList[currentUrl[1]].findIndex(\r\n        (i) => i.name === currentUrl[2]\r\n      );\r\n      dispatch({\r\n        type: MULTIPLE_VALUES,\r\n        payload: {\r\n          courseArea: currentUrl[1],\r\n          courseSubArea: courseList[currentUrl[1]][index],\r\n          sideBarOption: currentUrl[3],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        // isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/home\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\actions\\types.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\utils\\mock.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\AppBar.jsx",["120","121","122","123"],"import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Divider,\r\n  CssBaseline,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport logo from \"../assets/logo.png\";\r\nimport AppbarLink from \"./AppBarLinks\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  rightContent: {\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"rgba(255,0,0, 1)\",\r\n    // \"&:hover\": {\r\n    //   backgroundColor: fade(\"rgba(255,0,0)\", 0.9),\r\n    // },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"#ffffff\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    color: \"rgba(255,255,255, 1)\",\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  list: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #F26522\",\r\n    borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  // isSelectedListItem: {\r\n  //   color: \"white\",\r\n  // },\r\n}));\r\n\r\nconst sidebarTopList = [\r\n  {\r\n    link: \"theory\",\r\n    key: \"Theory\",\r\n    icon: <LocalLibraryIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"practical\",\r\n    key: \"Practical\",\r\n    icon: <BuildIcon />,\r\n    index: 1,\r\n  },\r\n  {\r\n    link: \"blogs\",\r\n    key: \"Blogs\",\r\n    icon: <LibraryBooksIcon />,\r\n    index: 2,\r\n  },\r\n  {\r\n    link: \"contributors\",\r\n    key: \"Contributors\",\r\n    icon: <GroupAddIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"downloads\",\r\n    key: \"Downloads\",\r\n    icon: <GetAppIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"subscribe\",\r\n    key: \"Subscribe\",\r\n    icon: <BookmarkIcon />,\r\n    index: 4,\r\n  },\r\n];\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const { courseArea, courseSubArea } = useSelector((state) => state.platform);\r\n  const [open, setOpen] = useState(true);\r\n  let history = useHistory();\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Tooltip title={courseSubArea[\"displayName\"]}>\r\n        <Typography className={classes.typography} align=\"center\" noWrap>\r\n          {courseSubArea[\"displayName\"]}\r\n        </Typography>\r\n      </Tooltip>\r\n\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        {sidebarTopList.map((item) => (\r\n          <Link\r\n            to={`/${courseArea}/${courseSubArea.name}/${item.link}`}\r\n            className={classes.link}\r\n            key={item.key}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={item.key}\r\n              className={\r\n                history.location.pathname ===\r\n                `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                  ? classes.isSelected\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ListItemIcon\r\n                className={\r\n                  history.location.pathname ===\r\n                  `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                    ? classes.isSelectedListItem\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.key} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <div className={classes.chevron}>\r\n        <IconButton onClick={handleDrawer}>\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <img src={logo} alt=\"mastercsconcepts\" style={{ height: \"20px\" }} />\r\n          <Typography>Dev Mode</Typography>\r\n          <div className={classes.rightContent}>\r\n            <div>\r\n              <AppbarLink />\r\n            </div>\r\n            {/* <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div> */}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\Sidebar.jsx",["124","125","126"],"import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  Typography,\r\n  Divider,\r\n  CssBaseline,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  rightContent: {\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"rgba(255,0,0, 1)\",\r\n    // \"&:hover\": {\r\n    //   backgroundColor: fade(\"rgba(255,0,0)\", 0.9),\r\n    // },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"#ffffff\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    color: \"rgba(255,255,255, 1)\",\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  list: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #F26522\",\r\n    borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  // isSelectedListItem: {\r\n  //   color: \"white\",\r\n  // },\r\n}));\r\n\r\nconst sidebarTopList = [\r\n  {\r\n    link: \"theory\",\r\n    key: \"Theory\",\r\n    icon: <LocalLibraryIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"practical\",\r\n    key: \"Practical\",\r\n    icon: <BuildIcon />,\r\n    index: 1,\r\n  },\r\n  {\r\n    link: \"blogs\",\r\n    key: \"Blogs\",\r\n    icon: <LibraryBooksIcon />,\r\n    index: 2,\r\n  },\r\n  {\r\n    link: \"contributors\",\r\n    key: \"Contributors\",\r\n    icon: <GroupAddIcon />,\r\n    index: 3,\r\n  },\r\n  {\r\n    link: \"research-papers\",\r\n    key: \"Research Papers\",\r\n    icon: <MenuBookIcon />,\r\n    index: 4,\r\n  },\r\n];\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const { courseArea, courseSubArea, sideBarOption } = useSelector(\r\n    (state) => state.platform\r\n  );\r\n  const [open, setOpen] = useState(true);\r\n  let history = useHistory();\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Tooltip title={courseSubArea[\"displayName\"]}>\r\n        <Typography className={classes.typography} align=\"center\" noWrap>\r\n          {courseSubArea[\"displayName\"]}\r\n        </Typography>\r\n      </Tooltip>\r\n\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        {sidebarTopList.map((item) => (\r\n          <Link\r\n            to={`/${courseArea}/${courseSubArea.name}/${item.link}`}\r\n            className={classes.link}\r\n            key={item.key}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={item.key}\r\n              className={\r\n                history.location.pathname.split(\"/\")[3] === item.link\r\n                  ? classes.isSelected\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ListItemIcon\r\n                className={\r\n                  history.location.pathname.split(\"/\")[3] === item.link\r\n                    ? classes.isSelectedListItem\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.key} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <div className={classes.chevron}>\r\n        <IconButton onClick={handleDrawer}>\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {courseArea && courseSubArea ? (\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\TopicContent.jsx",["127","128"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { theoryData } from \"../../utils/mock\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    position: \"fixed\",\r\n    width: \"85%\",\r\n    height: \"50px\",\r\n    zIndex: \"99\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    position: \"fixed\",\r\n    zIndex: \"1\",\r\n  },\r\n  articleContent: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    padding: \"15px\",\r\n  },\r\n}));\r\n\r\nconst TopicContent = (state) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [content, setContent] = useState(\"\");\r\n  useEffect(() => {\r\n    console.log(history.location.pathname);\r\n    const path = history.location.pathname.split(\"/\");\r\n    if (theoryData[path[1]]?.[path[2]]?.[path[3]]) {\r\n      const { cardInfo } = theoryData[path[1]][path[2]][path[3]].find(\r\n        (i) => i.cardInfo.id === path[4]\r\n      );\r\n      setContent(cardInfo);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className={classes.header}>\r\n        <div>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            startIcon={<ArrowBackIcon />}\r\n            onClick={() => history.goBack()}\r\n          >\r\n            BACK\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              {content.title}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            {/* <Rating\r\n              name=\"simple-controlled\"\r\n              value={2}\r\n              onChange={(event, newValue) => {\r\n                // setValue(newValue);\r\n                console.log(newValue);\r\n              }}\r\n            /> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.articleContent}>\r\n        {content &&\r\n          content.data.content.map((data) =>\r\n            data[\"type\"] === \"h5\" || data[\"type\"] === \"h6\" ? (\r\n              <Typography variant={data[\"type\"]} style={{ fontWeight: \"bold\" }}>\r\n                {data[\"content\"]}\r\n              </Typography>\r\n            ) : data[\"type\"] === \"olnumber\" ? (\r\n              <ol>\r\n                {data.content.map((x) => (\r\n                  <li key={x}>{x}</li>\r\n                ))}\r\n              </ol>\r\n            ) : data[\"type\"] === \"img\" ? (\r\n              <div>\r\n                <img\r\n                  alt={data[\"alt\"]}\r\n                  src={data[\"src\"]}\r\n                  style={{\r\n                    height: \"50%\",\r\n                    width: \"50%\",\r\n                    marginLeft: \"25%\",\r\n                    display: \"block\",\r\n                  }}\r\n                />\r\n                <Typography variant=\"caption\" align=\"center\">\r\n                  {data[\"caption\"]}\r\n                </Typography>\r\n              </div>\r\n            ) : data[\"type\"] === \"p\" ? (\r\n              data[\"content\"].map((x) =>\r\n                x[\"type\"] === \"text\" ? (\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    component=\"span\"\r\n                    style={{ fontWeight: x[\"fontWeight\"] }}\r\n                  >\r\n                    {x[\"content\"]}{\" \"}\r\n                  </Typography>\r\n                ) : x[\"type\"] === \"link\" ? (\r\n                  <Link to={x.url}>{x.content}</Link>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )\r\n            ) : (\r\n              \"\"\r\n            )\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicContent;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\Body.jsx",["129","130","131"],"import React from \"react\";\r\nimport Theory from \"./theory\";\r\n\r\nconst possibleRoutes = [\"theory\"];\r\n\r\nconst Body = ({ match }) => {\r\n  const { routeSelected, courseArea, courseSubArea } = match.params;\r\n\r\n  return <div>{routeSelected === \"theory\" ? <Theory /> : \"\"}</div>;\r\n};\r\n\r\nexport default Body;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\WrongPage.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\platformReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\layout\\AppBarLinks.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\index.jsx",["132"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\Popover.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\theory\\Card.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\editor\\index.jsx",["133","134","135"],"import { useState } from \"react\";\r\nimport { TextField, makeStyles } from \"@material-ui/core\";\r\nimport EditingBox from \"./EditingBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    width: \"100%\",\r\n    width: \"100ch\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst EditorIndex = () => {\r\n  const classes = useStyles();\r\n  const [content, setContent] = useState({\r\n    title: \"\",\r\n    date: \"\", //epoch\r\n    author: \"\",\r\n    content: [],\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <TextField id=\"title\" fullWidth label=\"Title\" />\r\n      </div>\r\n      <div>\r\n        <EditingBox />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorIndex;\r\n",["136","137"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\container\\editor\\EditingBox.jsx",["138","139"],"import { useState } from \"react\";\r\nimport { Grid, TextField, makeStyles } from \"@material-ui/core\";\r\nimport EditingBoxOption from \"../../components/common/SpeedDial\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst EditingBox = () => {\r\n  const classes = useStyles();\r\n  const [optionSelected, setOptionSelected] = useState(\"\");\r\n  const handleOptionSeleted = (val) => {\r\n    setOptionSelected(val);\r\n    alert(val);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ display: \"flex\", width: \"100%\", position: \"relative\" }}>\r\n        <div style={{ width: \"10%\" }}>\r\n          <EditingBoxOption optionSelected={handleOptionSeleted} />\r\n        </div>\r\n        <div style={{ width: \"90%\", marginTop: \"20px\", height: \"100%\" }}>\r\n          <TextField fullWidth />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditingBox;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\SpeedDial.jsx",["140","141"],"import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport SubjectSharpIcon from \"@material-ui/icons/SubjectSharp\";\r\n\r\nconst actions = [\r\n  { icon: <SubtitlesIcon />, name: \"Subtitles\" },\r\n  { icon: <DescriptionIcon />, name: \"Description\" },\r\n  { icon: <SubjectSharpIcon />, name: \"SubjectSharp\" },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //   root: {\r\n  //     transform: \"translateZ(0px)\",\r\n  //     flexGrow: 1,\r\n  //   },\r\n  //   exampleWrapper: {\r\n  //     position: \"relative\",\r\n  //     marginTop: theme.spacing(3),\r\n  //     height: 380,\r\n  //   },\r\n  //   radioGroup: {\r\n  //     margin: theme.spacing(1, 0),\r\n  //   },\r\n  speedDial: {\r\n    position: \"absolute\",\r\n    // \"&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft\": {\r\n    //   //   bottom: theme.spacing(2),\r\n    //   //   right: theme.spacing(2),\r\n    // },\r\n    // \"&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight\": {\r\n    //   top: theme.spacing(2),\r\n    //   left: theme.spacing(2),\r\n    // },\r\n  },\r\n}));\r\n\r\nconst SpeedDialComponent = ({ optionSelected }) => {\r\n  const classes = useStyles();\r\n  const [direction, setDirection] = useState(\"right\");\r\n  const [open, setOpen] = useState(false);\r\n  const [hidden, setHidden] = useState(false);\r\n\r\n  const handleDirectionChange = (event) => {\r\n    setDirection(event.target.value);\r\n  };\r\n\r\n  const handleHiddenChange = (event) => {\r\n    setHidden(event.target.checked);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOptionSelected = (val) => {\r\n    alert(val);\r\n    handleClose();\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <div>\r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial\"\r\n        className={classes.speedDial}\r\n        hidden={hidden}\r\n        icon={<SpeedDialIcon color=\"secondary\" />}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n        direction={direction}\r\n      >\r\n        {actions.map((action) => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={() => handleOptionSelected(action.name)}\r\n          />\r\n        ))}\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedDialComponent;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\PreviewModal.jsx",[],["142","143"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\Display.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\ui\\src\\components\\common\\TextEditor.jsx",["144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":59,"column":11,"nodeType":"152","messageId":"153","endLine":59,"endColumn":26},{"ruleId":"150","severity":1,"message":"154","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":32,"column":6,"nodeType":"157","endLine":32,"endColumn":8,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"159","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":12},{"ruleId":"150","severity":1,"message":"160","line":18,"column":8,"nodeType":"152","messageId":"153","endLine":18,"endColumn":18},{"ruleId":"150","severity":1,"message":"161","line":188,"column":9,"nodeType":"152","messageId":"153","endLine":188,"endColumn":21},{"ruleId":"150","severity":1,"message":"162","line":192,"column":9,"nodeType":"152","messageId":"153","endLine":192,"endColumn":15},{"ruleId":"150","severity":1,"message":"163","line":17,"column":8,"nodeType":"152","messageId":"153","endLine":17,"endColumn":18},{"ruleId":"150","severity":1,"message":"164","line":175,"column":38,"nodeType":"152","messageId":"153","endLine":175,"endColumn":51},{"ruleId":"150","severity":1,"message":"161","line":180,"column":9,"nodeType":"152","messageId":"153","endLine":180,"endColumn":21},{"ruleId":"150","severity":1,"message":"165","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"166","line":43,"column":6,"nodeType":"157","endLine":43,"endColumn":8,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":4,"column":7,"nodeType":"152","messageId":"153","endLine":4,"endColumn":21},{"ruleId":"150","severity":1,"message":"169","line":7,"column":26,"nodeType":"152","messageId":"153","endLine":7,"endColumn":36},{"ruleId":"150","severity":1,"message":"170","line":7,"column":38,"nodeType":"152","messageId":"153","endLine":7,"endColumn":51},{"ruleId":"150","severity":1,"message":"171","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":11,"column":5,"nodeType":"174","messageId":"175","endLine":11,"endColumn":10},{"ruleId":"150","severity":1,"message":"176","line":18,"column":10,"nodeType":"152","messageId":"153","endLine":18,"endColumn":17},{"ruleId":"150","severity":1,"message":"177","line":18,"column":19,"nodeType":"152","messageId":"153","endLine":18,"endColumn":29},{"ruleId":"146","replacedBy":"178"},{"ruleId":"148","replacedBy":"179"},{"ruleId":"150","severity":1,"message":"180","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"181","line":13,"column":10,"nodeType":"152","messageId":"153","endLine":13,"endColumn":24},{"ruleId":"150","severity":1,"message":"182","line":48,"column":9,"nodeType":"152","messageId":"153","endLine":48,"endColumn":30},{"ruleId":"150","severity":1,"message":"183","line":52,"column":9,"nodeType":"152","messageId":"153","endLine":52,"endColumn":27},{"ruleId":"146","replacedBy":"184"},{"ruleId":"148","replacedBy":"185"},{"ruleId":"155","severity":1,"message":"186","line":13,"column":6,"nodeType":"157","endLine":13,"endColumn":8,"suggestions":"187"},{"ruleId":"172","severity":1,"message":"188","line":63,"column":15,"nodeType":"174","messageId":"175","endLine":63,"endColumn":18},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'WrongPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["191"],"'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'handleDrawer' is assigned a value but never used.","'drawer' is assigned a value but never used.","'GetAppIcon' is defined but never used.","'sideBarOption' is assigned a value but never used.","'Rating' is defined but never used.","React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array.",["192"],"'possibleRoutes' is assigned a value but never used.","'courseArea' is assigned a value but never used.","'courseSubArea' is assigned a value but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.",["189"],["190"],"'Grid' is defined but never used.","'optionSelected' is assigned a value but never used.","'handleDirectionChange' is assigned a value but never used.","'handleHiddenChange' is assigned a value but never used.",["189"],["190"],"React Hook useEffect has missing dependencies: 'data' and 'edit'. Either include them or remove the dependency array. If 'setEditorState' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.",["193"],"Duplicate key 'alt'.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [dispatch, history.location.pathname]",{"range":"200","text":"201"},"Update the dependencies array to be: [history.location.pathname]",{"range":"202","text":"203"},"Update the dependencies array to be: [data, edit]",{"range":"204","text":"205"},[1056,1058],"[dispatch, history.location.pathname]",[1224,1226],"[history.location.pathname]",[448,450],"[data, edit]"]