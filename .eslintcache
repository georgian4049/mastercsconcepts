[{"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\index.js":"1","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\App.js":"2","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\store\\index.js":"3","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Layout.js":"4","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\routing\\PrivateRoute.js":"5","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\ErrorBoundary.jsx":"6","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Notification.jsx":"7","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\index.js":"8","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\authentication.js":"9","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\types.js":"10","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\mock.js":"11","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Sidebar.jsx":"12","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\AppBar.jsx":"13","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\NewContent.jsx":"14","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\Body.jsx":"15","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Display.jsx":"16","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\WrongPage.jsx":"17","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\notificationAction.js":"18","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\TopicContent.jsx":"19","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\contentReducer.js":"20","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\authenticationReducer.js":"21","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\notificationReducer.js":"22","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\platformReducer.js":"23","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\home\\index.jsx":"24","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\api\\authentication.js":"25","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\content.js":"26","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\applicationConfig.js":"27","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\NewEditor.jsx":"28","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\axios.config.js":"29","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\AppBarLinks.jsx":"30","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\api\\content.js":"31","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\index.jsx":"32","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\platformConfig.js":"33","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\SpeedDial.jsx":"34","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\config.js":"35","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\AddContentCard.jsx":"36","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\Card.jsx":"37","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Popover.jsx":"38","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\DisplayNew.jsx":"39","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\DisplayNew1.jsx":"40","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\BackButton.jsx":"41","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Dialog.jsx":"42","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\message.js":"43","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Logout.jsx":"44","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\auth\\Register.jsx":"45","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\auth\\Login.js":"46","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\UnderConstruction.jsx":"47","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\Regex.js":"48"},{"size":524,"mtime":1614783077336,"results":"49","hashOfConfig":"50"},{"size":2514,"mtime":1615471560835,"results":"51","hashOfConfig":"50"},{"size":568,"mtime":1611252711703,"results":"52","hashOfConfig":"50"},{"size":2317,"mtime":1615466397612,"results":"53","hashOfConfig":"50"},{"size":1829,"mtime":1615466073295,"results":"54","hashOfConfig":"50"},{"size":688,"mtime":1614781657611,"results":"55","hashOfConfig":"50"},{"size":1659,"mtime":1615229681695,"results":"56","hashOfConfig":"50"},{"size":614,"mtime":1614715696344,"results":"57","hashOfConfig":"50"},{"size":2443,"mtime":1615483529792,"results":"58","hashOfConfig":"50"},{"size":851,"mtime":1615232589729,"results":"59","hashOfConfig":"50"},{"size":11177,"mtime":1614454789182,"results":"60","hashOfConfig":"50"},{"size":14434,"mtime":1615439013323,"results":"61","hashOfConfig":"50"},{"size":4826,"mtime":1615469380615,"results":"62","hashOfConfig":"50"},{"size":1204,"mtime":1615012807098,"results":"63","hashOfConfig":"50"},{"size":1277,"mtime":1615470819612,"results":"64","hashOfConfig":"50"},{"size":937,"mtime":1614962682253,"results":"65","hashOfConfig":"50"},{"size":598,"mtime":1614713388434,"results":"66","hashOfConfig":"50"},{"size":1036,"mtime":1614712525424,"results":"67","hashOfConfig":"50"},{"size":3811,"mtime":1614963070836,"results":"68","hashOfConfig":"50"},{"size":1564,"mtime":1614778169613,"results":"69","hashOfConfig":"50"},{"size":838,"mtime":1614714574300,"results":"70","hashOfConfig":"50"},{"size":2331,"mtime":1615232617091,"results":"71","hashOfConfig":"50"},{"size":867,"mtime":1614717481457,"results":"72","hashOfConfig":"50"},{"size":626,"mtime":1614713550388,"results":"73","hashOfConfig":"50"},{"size":395,"mtime":1615473151765,"results":"74","hashOfConfig":"50"},{"size":1865,"mtime":1615490942789,"results":"75","hashOfConfig":"50"},{"size":119,"mtime":1615471261970,"results":"76","hashOfConfig":"50"},{"size":4320,"mtime":1615440761067,"results":"77","hashOfConfig":"50"},{"size":482,"mtime":1614703212439,"results":"78","hashOfConfig":"50"},{"size":2184,"mtime":1615356309431,"results":"79","hashOfConfig":"50"},{"size":397,"mtime":1614770359326,"results":"80","hashOfConfig":"50"},{"size":1404,"mtime":1614962651121,"results":"81","hashOfConfig":"50"},{"size":1035,"mtime":1614874701970,"results":"82","hashOfConfig":"50"},{"size":1917,"mtime":1615321214569,"results":"83","hashOfConfig":"50"},{"size":242,"mtime":1615442209376,"results":"84","hashOfConfig":"50"},{"size":2220,"mtime":1615471856298,"results":"85","hashOfConfig":"50"},{"size":2067,"mtime":1615473546672,"results":"86","hashOfConfig":"50"},{"size":4461,"mtime":1615354863863,"results":"87","hashOfConfig":"50"},{"size":2033,"mtime":1615228800104,"results":"88","hashOfConfig":"50"},{"size":376,"mtime":1614962773834,"results":"89","hashOfConfig":"50"},{"size":882,"mtime":1615320609440,"results":"90","hashOfConfig":"50"},{"size":1848,"mtime":1615230371529,"results":"91","hashOfConfig":"50"},{"size":340,"mtime":1615222425675,"results":"92","hashOfConfig":"50"},{"size":431,"mtime":1615357824249,"results":"93","hashOfConfig":"50"},{"size":11163,"mtime":1615485294027,"results":"94","hashOfConfig":"50"},{"size":7058,"mtime":1615470255951,"results":"95","hashOfConfig":"50"},{"size":493,"mtime":1615471166270,"results":"96","hashOfConfig":"50"},{"size":755,"mtime":1615481899164,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"bg9hcb",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\index.js",[],["209","210"],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\App.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\store\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Layout.js",["211","212"],"import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AppBar from \"./AppBar\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Body from \"../container/Body\";\r\nimport NewContent from \"../components/common/NewContent\";\r\nimport WrongPage from \"./WrongPage\";\r\nimport HomePage from \"../container/home\";\r\nimport DisplayNew from \"../components/common/DisplayNew\";\r\nimport Logout from \"./Logout\";\r\nimport Register from \"../container/auth/Register\";\r\nimport Login from \"../container/auth/Login\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    marginLeft: \"0px\",\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#fff\",\r\n    height: \"100%\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"100%\", //or 1180\r\n    minWidth: \" 200px\",\r\n    marginTop: theme.spacing(0),\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function Layout() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n      <Route path=\"/\" component={AppBar} />\r\n      <Route path=\"/\" component={Sidebar} />\r\n\r\n      <div className={classes.root}>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact path=\"/logout\" component={Logout} />\r\n            <Route exact path={`/wrong-page`} component={WrongPage} />\r\n            <Route exact path={`/home`} component={HomePage} />\r\n            <Route\r\n              exact\r\n              path={`/:courseArea/:courseSubArea/:materialCategory`}\r\n              component={Body}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`/:courseArea/:courseSubArea/:materialCategory/new-content`}\r\n              component={NewContent}\r\n            />\r\n            <Route\r\n              exact\r\n              path={`/:courseArea/:courseSubArea/:materialCategory/topicId/:topicId`}\r\n              component={DisplayNew}\r\n            />\r\n\r\n            <Route path=\"/\" component={WrongPage} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\routing\\PrivateRoute.js",["213"],"import { useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MULTIPLE_VALUES } from \"../../state/actions/types\";\r\nimport { courseList } from \"../../utils/mock\";\r\nimport { refresh } from \"../../state/actions/authentication\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    // isAuthenticated: state.authentication.isAuthenticated,\r\n    isAuthenticated: true,\r\n  }));\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    intialCall();\r\n  }, []);\r\n  const intialCall = () => {\r\n    const token = localStorage.getItem(\"token\") || null;\r\n    if (token) {\r\n      dispatch(refresh({ token }));\r\n    } else {\r\n      // history.replace(\"/login\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentUrl = history.location.pathname.split(\"/\");\r\n    if (\r\n      courseList[currentUrl[1]] &&\r\n      courseList[currentUrl[1]].find((i) => i.name === currentUrl[2])\r\n    ) {\r\n      const index = courseList[currentUrl[1]].findIndex(\r\n        (i) => i.name === currentUrl[2]\r\n      );\r\n      dispatch({\r\n        type: MULTIPLE_VALUES,\r\n        payload: {\r\n          courseArea: currentUrl[1],\r\n          courseSubArea: courseList[currentUrl[1]][index],\r\n          materialCategory: currentUrl[3],\r\n        },\r\n      });\r\n    } else {\r\n      // history.replace(\"/wrong-page\");\r\n    }\r\n    /*eslint-disable-next-line*/\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        // isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/home\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\ErrorBoundary.jsx",[],["214","215"],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Notification.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\authentication.js",["216"],"import { LOGOUT, LOGIN_SUCCESS, MESSAGE } from \"./types\";\r\nimport {\r\n  getAuthentication,\r\n  getRefreshToken,\r\n  registerUser,\r\n} from \"../../api/authentication\";\r\n// import Message from \"../../utils/message\";\r\n\r\nexport function logout() {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n}\r\n\r\nexport function login(body) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const { data } = await getAuthentication(body);\r\n      console.log(data);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response?.status === 400) {\r\n        dispatch({\r\n          type: MESSAGE.WRONG_LOGIN_CREDENTIALS,\r\n          payload: \"Invalid Credential\",\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: MESSAGE.ERROR,\r\n          payload: \"Server Error! Please try again later\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function register(body) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const { data } = await registerUser(body);\r\n      dispatch({\r\n        type: MESSAGE.SUCCESS,\r\n        payload: \"Registered Successfully! Please Login\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response?.status === 400) {\r\n        dispatch({\r\n          type: MESSAGE.WRONG_LOGIN_CREDENTIALS,\r\n          payload: \"This email address is already registered with us\",\r\n        });\r\n      } else if (error.response?.status === 401) {\r\n        dispatch({\r\n          type: MESSAGE.WRONG_LOGIN_CREDENTIALS,\r\n          payload: \"Username Taken\",\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: MESSAGE.ERROR,\r\n          payload: \"Server Error! Please try again later\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function refresh(body) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const { data } = await getRefreshToken(body);\r\n      console.log(data);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response?.status === 400) {\r\n        console.log(\"Token is absent \");\r\n        // dispatch({\r\n        //   type: MESSAGE.NORMAL,\r\n        //   payload: \"Please Login to access full content\",\r\n        // });\r\n      } else {\r\n        dispatch({\r\n          type: MESSAGE.ERROR,\r\n          payload: \"Server Error! Please try again later\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\types.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\mock.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Sidebar.jsx",["217"],"// import { useState } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { useHistory, Link } from \"react-router-dom\";\r\n// import clsx from \"clsx\";\r\n// import {\r\n//   makeStyles,\r\n//   List,\r\n//   ListItem,\r\n//   ListItemIcon,\r\n//   ListItemText,\r\n//   Drawer,\r\n//   Typography,\r\n//   Divider,\r\n//   CssBaseline,\r\n//   Tooltip,\r\n// // } from \"@material-ui/core\";\r\n// import LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\n// import BuildIcon from \"@material-ui/icons/Build\";\r\n// import LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\n// import GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\n// import MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\n\r\n// const drawerWidth = 210;\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     flexGrow: 1,\r\n//     display: \"flex\",\r\n//     backgroundColor: \"#fff\",\r\n//     zIndex: 1,\r\n//   },\r\n//   appBar: {\r\n//     zIndex: theme.zIndex.drawer + 1,\r\n//     transition: theme.transitions.create([\"width\", \"margin\"], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     backgroundColor: \"#fff\",\r\n//   },\r\n//   rightContent: {\r\n//     marginRight: \"0px\",\r\n//     margin: \"auto\",\r\n//     display: \"flex\",\r\n//   },\r\n//   search: {\r\n//     position: \"relative\",\r\n//     float: \"right\",\r\n//     borderRadius: theme.shape.borderRadius,\r\n//     backgroundColor: \"rgba(255,0,0, 1)\",\r\n//     // \"&:hover\": {\r\n//     //   backgroundColor: fade(\"rgba(255,0,0)\", 0.9),\r\n//     // },\r\n//     marginLeft: 0,\r\n//     width: \"100%\",\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       marginLeft: theme.spacing(1),\r\n//       width: \"auto\",\r\n//     },\r\n//   },\r\n//   searchIcon: {\r\n//     padding: theme.spacing(0, 2),\r\n//     height: \"100%\",\r\n//     position: \"absolute\",\r\n//     pointerEvents: \"none\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n//   inputRoot: {\r\n//     color: \"#ffffff\",\r\n//   },\r\n//   inputInput: {\r\n//     padding: theme.spacing(1, 1, 1, 0),\r\n//     // vertical padding + font size from searchIcon\r\n//     paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n//     transition: theme.transitions.create(\"width\"),\r\n//     width: \"100%\",\r\n//     color: \"rgba(255,255,255, 1)\",\r\n//     fontWeight: \"bold\",\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       width: \"12ch\",\r\n//       \"&:focus\": {\r\n//         width: \"25ch\",\r\n//       },\r\n//     },\r\n//   },\r\n//   drawer: {\r\n//     width: drawerWidth,\r\n\r\n//     flexShrink: 0,\r\n//     whiteSpace: \"nowrap\",\r\n//   },\r\n//   drawerOpen: {\r\n//     width: drawerWidth,\r\n//     top: \"65px\",\r\n//     transition: theme.transitions.create(\"width\", {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   drawerClose: {\r\n//     top: \"65px\",\r\n//     transition: theme.transitions.create(\"width\", {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     overflowX: \"hidden\",\r\n//     width: theme.spacing(7) + 1,\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       width: theme.spacing(7) + 1,\r\n//     },\r\n//   },\r\n//   list: {\r\n//     overflow: \"hidden\",\r\n//     backgroundColor: \"rgb(255,255,255)\",\r\n//     paddingTop: \"0px\",\r\n//   },\r\n//   typography: {\r\n//     padding: theme.spacing(2),\r\n//     fontWeight: \"bold\",\r\n//     color: theme.palette.secondary.main,\r\n//   },\r\n//   link: {\r\n//     textDecoration: \"none\",\r\n//     color: \"#000000\",\r\n//   },\r\n//   isSelected: {\r\n//     borderRight: \"2px solid #F26522\",\r\n//     borderColor: \"#F26522\",\r\n//     // \"&:hover\": {\r\n//     //   color: \"#000000\",\r\n//     //   backgroundColor: \"#F26522\",\r\n//     // },\r\n//   },\r\n//   // isSelectedListItem: {\r\n//   //   color: \"white\",\r\n//   // },\r\n// }));\r\n\r\n// const sidebarTopList = [\r\n//   {\r\n//     link: \"theory\",\r\n//     key: \"Theory\",\r\n//     icon: <LocalLibraryIcon />,\r\n//     index: 0,\r\n//   },\r\n//   {\r\n//     link: \"practical\",\r\n//     key: \"Practical\",\r\n//     icon: <BuildIcon />,\r\n//     index: 1,\r\n//   },\r\n//   {\r\n//     link: \"blogs\",\r\n//     key: \"Blogs\",\r\n//     icon: <LibraryBooksIcon />,\r\n//     index: 2,\r\n//   },\r\n//   {\r\n//     link: \"contributors\",\r\n//     key: \"Contributors\",\r\n//     icon: <GroupAddIcon />,\r\n//     index: 3,\r\n//   },\r\n//   {\r\n//     link: \"research-papers\",\r\n//     key: \"Research Papers\",\r\n//     icon: <MenuBookIcon />,\r\n//     index: 4,\r\n//   },\r\n// ];\r\n\r\n// export default function SearchAppBar(props) {\r\n//   const classes = useStyles();\r\n//   const { courseArea, courseSubArea } = useSelector((state) => state.platform);\r\n\r\n//   const [open, setOpen] = useState(true);\r\n//   let history = useHistory();\r\n//   // const handleDrawer = () => {\r\n//   //   setOpen(!open);\r\n//   // };\r\n\r\n//   const drawer = (\r\n//     <div>\r\n//       <Tooltip title={courseSubArea[\"displayName\"]}>\r\n//         <Typography className={classes.typography} align=\"center\" noWrap>\r\n//           {courseSubArea[\"displayName\"]}\r\n//         </Typography>\r\n//       </Tooltip>\r\n\r\n//       <Divider />\r\n//       <List className={classes.list}>\r\n//         {sidebarTopList.map((item) => (\r\n//           <Link\r\n//             to={`/${courseArea}/${courseSubArea.name}/${item.link}`}\r\n//             className={classes.link}\r\n//             key={item.key}\r\n//           >\r\n//             <ListItem\r\n//               button\r\n//               key={item.key}\r\n//               className={\r\n//                 history.location.pathname.split(\"/\")[3] === item.link\r\n//                   ? classes.isSelected\r\n//                   : \"\"\r\n//               }\r\n//             >\r\n//               <ListItemIcon\r\n//                 className={\r\n//                   history.location.pathname.split(\"/\")[3] === item.link\r\n//                     ? classes.isSelectedListItem\r\n//                     : \"\"\r\n//                 }\r\n//               >\r\n//                 {item.icon}\r\n//               </ListItemIcon>\r\n//               <ListItemText primary={item.key} />\r\n//             </ListItem>\r\n//           </Link>\r\n//         ))}\r\n//       </List>\r\n//       {/* <div className={classes.chevron}>\r\n//         <IconButton onClick={handleDrawer}>\r\n//           {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n//         </IconButton>\r\n//       </div> */}\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <CssBaseline />\r\n//       {courseArea && courseSubArea ? (\r\n//         <Drawer\r\n//           variant=\"permanent\"\r\n//           className={clsx(classes.drawer, {\r\n//             [classes.drawerOpen]: open,\r\n//             [classes.drawerClose]: !open,\r\n//           })}\r\n//           classes={{\r\n//             paper: clsx({\r\n//               [classes.drawerOpen]: open,\r\n//               [classes.drawerClose]: !open,\r\n//             }),\r\n//           }}\r\n//         >\r\n//           {drawer}\r\n//         </Drawer>\r\n//       ) : (\r\n//         \"\"\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  CssBaseline,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst sidebarTopList = [\r\n  {\r\n    link: \"theory\",\r\n    key: \"Theory\",\r\n    icon: <LocalLibraryIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"practical\",\r\n    key: \"Practical\",\r\n    icon: <BuildIcon />,\r\n    index: 1,\r\n  },\r\n  {\r\n    link: \"blogs\",\r\n    key: \"Blogs\",\r\n    icon: <LibraryBooksIcon />,\r\n    index: 2,\r\n  },\r\n  {\r\n    link: \"contributors\",\r\n    key: \"Contributors\",\r\n    icon: <GroupAddIcon />,\r\n    index: 3,\r\n  },\r\n  {\r\n    link: \"research-papers\",\r\n    key: \"Research Papers\",\r\n    icon: <MenuBookIcon />,\r\n    index: 4,\r\n  },\r\n];\r\nconst sidebarBottomList = [\r\n  {\r\n    link: \"update-profile\",\r\n    key: \"Update Profile\",\r\n    icon: <UpdateIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"login\",\r\n    key: \"logout\",\r\n    icon: <ExitToAppIcon />,\r\n    index: 0,\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#F26522\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    backgroundColor: \"#F26522\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#F26522\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    backgroundColor: \"#F26522\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"#F26522\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  image: {\r\n    width: \"212px\",\r\n  },\r\n  logo_small: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n  },\r\n  logo: {\r\n    width: \"100px\",\r\n    height: \"60px\",\r\n  },\r\n  listTop: {\r\n    overflow: \"hidden\",\r\n    // backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  listBottom: {\r\n    overflow: \"hidden\",\r\n    // backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  logout: {\r\n    marginLeft: \"auto\",\r\n    // color: \"#ffffff\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #fff\",\r\n    color: \"white\",\r\n    // borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  isSelectedListItem: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { courseArea, courseSubArea } = useSelector((state) => state.platform);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const drawer = (list, style) => (\r\n    <div className={classes[style]}>\r\n      {style === \"listTop\" ? (\r\n        <Tooltip title={courseSubArea[\"displayName\"]}>\r\n          <Typography className={classes.typography} align=\"center\" noWrap>\r\n            {open ? courseSubArea[\"displayName\"] : courseSubArea[\"name\"]}\r\n          </Typography>\r\n        </Tooltip>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Divider />\r\n      <List className={classes[style]}>\r\n        {list.map((item) => (\r\n          <Link\r\n            to={\r\n              style === \"listTop\"\r\n                ? `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                : `/${item.link}`\r\n            }\r\n            className={classes.link}\r\n            key={item.key}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={item.key}\r\n              className={\r\n                history.location.pathname.split(\"/\")[3] === item.link\r\n                  ? classes.isSelected\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ListItemIcon\r\n                className={\r\n                  history.location.pathname.split(\"/\")[3] === item.link\r\n                    ? classes.isSelectedListItem\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.key} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <div className={classes.chevron}>\r\n        <IconButton onClick={handleDrawer}>\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div> */}\r\n    </div>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {/* {history.location.pathname.includes(`${courseArea / courseSubArea}`)} */}\r\n      {history.location.pathname.includes(\r\n        `${courseArea}/${courseSubArea[\"name\"]}`\r\n      ) ? (\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n          onMouseEnter={handleDrawerOpen}\r\n          onMouseLeave={handleDrawerClose}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton>\r\n              {open ? (\r\n                <img src={logo} alt=\"Logo\" className={classes.image} />\r\n              ) : (\r\n                <img src={logo} alt=\"Logo\" className={classes.logo_small} />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          {drawer(sidebarTopList, \"listTop\")}\r\n          {/* {drawer(sidebarBottomList, \"listBottom\")} */}\r\n        </Drawer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\AppBar.jsx",["218","219","220","221"],"import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Chip,\r\n  CssBaseline,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport logo from \"../assets/logo.png\";\r\nimport AppbarLink from \"./AppBarLinks\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  rightContent: {\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  appBarLink: {\r\n    margin: \"auto\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #F26522\",\r\n    borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  // isSelectedListItem: {\r\n  //   color: \"white\",\r\n  // },\r\n}));\r\n\r\nconst profile = [\r\n  { key: \"1\", link: \"profile\", name: \"Your Profile\" },\r\n  { key: \"2\", link: \"settings\", name: \"Settings\" },\r\n  { key: \"3\", link: \"logout\", name: \"Logout\" },\r\n];\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { isAuthenticated, name, username } = useSelector(\r\n    (state) => state.authentication\r\n  );\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <img src={logo} alt=\"mastercsconcepts\" style={{ height: \"20px\" }} />\r\n          <Chip label=\"Dev Mode\" color=\"secondary\" />\r\n          <div className={classes.rightContent}>\r\n            <div className={classes.appBarLink}>\r\n              <AppbarLink />\r\n            </div>\r\n            {isAuthenticated ? (\r\n              <div>\r\n                <IconButton\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMenu}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle color=\"secondary\" />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  style={{ marginTop: \"30px\" }}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {profile.map((item) => (\r\n                    <Link\r\n                      to={`/${item.link}`}\r\n                      className={classes.link}\r\n                      style={{ textDecoration: \"none\" }}\r\n                      key={item.key}\r\n                    >\r\n                      <MenuItem\r\n                        button\r\n                        key={item[\"key\"]}\r\n                        // onClick={() => history.replace(`${item[\"link\"]}`)}\r\n                      >\r\n                        {item[\"name\"]}\r\n                      </MenuItem>\r\n                    </Link>\r\n                  ))}\r\n                </Menu>\r\n              </div>\r\n            ) : (\r\n              <Tooltip title=\"Login to access all features\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                  onClick={() => history.replace(\"/login\")}\r\n                >\r\n                  <LockOpenIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\NewContent.jsx",["222","223"],"import { useHistory } from \"react-router-dom\";\r\nimport { Button, makeStyles, TextField, InputBase } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport NewEditor from \"./NewEditor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    position: \"fixed\",\r\n    width: \"85%\",\r\n    height: \"50px\",\r\n    zIndex: \"99\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    position: \"fixed\",\r\n    zIndex: \"1\",\r\n  },\r\n  articleContent: {\r\n    maxWidth: \"100%\",\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    padding: \"15px\",\r\n  },\r\n}));\r\n\r\nconst NewContent = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <div className={classes.header}>\r\n        <Button\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          startIcon={<ArrowBackIcon />}\r\n          onClick={() => history.goBack()}\r\n        >\r\n          BACK\r\n        </Button>\r\n      </div>\r\n      <div className={classes.articleContent}>\r\n        <br />\r\n\r\n        <NewEditor />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewContent;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\Body.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Display.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\WrongPage.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\notificationAction.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\TopicContent.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\contentReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\authenticationReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\notificationReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\reducers\\platformReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\home\\index.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\api\\authentication.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\state\\actions\\content.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\applicationConfig.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\NewEditor.jsx",["224"],"import { useRef, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport EditorJs from \"react-editor-js\";\r\nimport { InputBase, IconButton, Tooltip, makeStyles } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { EDITOR_JS_TOOLS } from \"../../utils/platformConfig\";\r\nimport SpeedDial from \"./SpeedDial\";\r\nimport { postContents } from \"../../state/actions/content\";\r\nimport Dialog from \"./Dialog\";\r\nimport { useHistory } from \"react-router\";\r\nimport Message from \"../../utils/message\";\r\nimport \"./editor.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  edit: {\r\n    position: \"fixed\",\r\n    top: theme.spacing(10),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst NewEditor = ({ data, existing, readOnly }) => {\r\n  const classes = useStyles();\r\n  const instanceRef = useRef(null);\r\n  const history = useHistory();\r\n  const { materialCategory, courseArea, courseSubArea } = useSelector(\r\n    (state) => state.platform\r\n  );\r\n\r\n  const { username, isAuthenticated } = useSelector(\r\n    (state) => state.authentication\r\n  );\r\n  const [edit, setEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    courseArea: \"\",\r\n    courseSubArea: \"\",\r\n    materialCategory: \"\",\r\n    authorUsername: \"\",\r\n    title: \"\",\r\n    tags: \"\",\r\n    datePublished: new Date(),\r\n    view: 0,\r\n    like: 0,\r\n    minRead: 0,\r\n    contentData: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (existing) {\r\n      setState(data);\r\n    }\r\n  }, [existing]);\r\n  console.log(state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleSave() {\r\n    const savedData = await instanceRef.current.save();\r\n    dispatch(\r\n      postContents({\r\n        ...state,\r\n        authorUsername: username,\r\n        courseArea: courseArea,\r\n        courseSubArea: courseSubArea[\"name\"],\r\n        materialCategory: materialCategory,\r\n        contentData: savedData,\r\n      })\r\n    );\r\n  }\r\n  const handleChange = (buttonClicked) => {\r\n    if (buttonClicked === \"Cancel\") {\r\n      setState({ ...state, cancel: true });\r\n    } else if (buttonClicked === \"Publish\") {\r\n      handleSave();\r\n      //\r\n    }\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleCancel = (buttonType) => {\r\n    if (buttonType === \"left\") {\r\n      history.goBack();\r\n    } else {\r\n      setState({ ...state, cancel: false });\r\n    }\r\n  };\r\n\r\n  //readOnly\r\n  return (\r\n    <div>\r\n      <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n        <InputBase\r\n          autoFocus\r\n          fullWidth\r\n          onChange={(e) => setState({ ...state, title: e.target.value })}\r\n          value={state.title}\r\n          placeholder=\"Enter title here...\"\r\n          inputProps={{ \"aria-label\": \"naked\" }}\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"25px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {data?.contentData ? (\r\n        <>\r\n          {isAuthenticated && username === data.authorUsername && !edit && (\r\n            <div style={{ display: \"flex\" }}>\r\n              <Tooltip title=\"Edit Content\">\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  className={classes.edit}\r\n                  onClick={() => setEdit(!edit)}\r\n                >\r\n                  <EditIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n          <EditorJs\r\n            tools={EDITOR_JS_TOOLS}\r\n            autofocus\r\n            data={data.contentData}\r\n            placeholder=\"Enter your content here\"\r\n            instanceRef={(instance) => (instanceRef.current = instance)}\r\n            readOnly={!edit}\r\n          />\r\n        </>\r\n      ) : (\r\n        <EditorJs\r\n          tools={EDITOR_JS_TOOLS}\r\n          autofocus\r\n          placeholder=\"Enter your content here\"\r\n          instanceRef={(instance) => (instanceRef.current = instance)}\r\n        />\r\n      )}\r\n      {(!existing || edit) && <SpeedDial handleChange={handleChange} />}\r\n\r\n      <Dialog\r\n        shouldOpen={state.cancel}\r\n        handleButtonClicked={handleCancel}\r\n        messageBody1={Message.en.editor.cancel.messageBody1}\r\n        messageBody2={Message.en.editor.cancel.messageBody2}\r\n        leftButtonText=\"Yes\"\r\n        rightButtonText=\"No\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewEditor;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\axios.config.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\AppBarLinks.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\api\\content.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\index.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\platformConfig.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\SpeedDial.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\config.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\AddContentCard.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\theory\\Card.jsx",["225","226","227"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 275,\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n    border: `1px solid  green`,\r\n    borderRadius: \"10px\",\r\n  },\r\n  header: {\r\n    height: \"30px\",\r\n    display: \"flex\",\r\n    \"&>*\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  },\r\n  chip: {\r\n    marginLeft: \"auto\",\r\n    \"&>*\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n}));\r\nexport default function Cards({ data }) {\r\n  const classes = useStyles();\r\n  const {\r\n    // eslint-disable-next-line\r\n    title,\r\n    datePublished,\r\n    authorUsername,\r\n    // imgUrl,\r\n    // description,\r\n    _id,\r\n  } = data;\r\n\r\n  const history = useHistory();\r\n\r\n  // const handleCardClick = () => {};\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <Link\r\n        to={`${history.location.pathname}/topicId/${_id}`}\r\n        className={classes.link}\r\n      >\r\n        <CardContent>\r\n          <div className={classes.header}>\r\n            <Typography className={classes.title} noWrap>\r\n              {title}\r\n            </Typography>\r\n          </div>\r\n          <br />\r\n          <Typography variant=\"body2\">{`Author :- ${authorUsername}`}</Typography>\r\n          <Typography variant=\"body2\">{\"description\"}</Typography>\r\n          <Typography variant=\"body2\">\r\n            {`Published on :- ${datePublished.split(\"T\")[0]}`}\r\n          </Typography>\r\n          {/* <Typography variant=\"body2\">{`Assigned To :- ${assignee}`}</Typography> */}\r\n        </CardContent>\r\n      </Link>\r\n      {/* <CardActions>\r\n        <IconButton aria-label=\"Upload\" size=\"small\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Popover.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\DisplayNew.jsx",["228","229","230","231","232","233","234","235","236","237"],"import { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport EditorJs from \"react-editor-js\";\r\nimport { EDITOR_JS_TOOLS } from \"../../utils/platformConfig\";\r\n// import { postContents } from \"../../state/actions/content\";\r\nimport BackButton from \"./BackButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport NewEditor from \"./NewEditor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  //   root: {\r\n  //     width: \"100%\",\r\n  //     position: \"relative\",\r\n  //   },\r\n  header: {\r\n    position: \"fixed\",\r\n    width: \"85%\",\r\n    height: \"50px\",\r\n    zIndex: \"99\",\r\n    backgroundColor: \"#fff\",\r\n    padding: \"5px\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    position: \"fixed\",\r\n    zIndex: \"1\",\r\n  },\r\n  articleContent: {\r\n    maxWidth: \"100%\",\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    padding: \"15px\",\r\n  },\r\n}));\r\n\r\nconst DisplayNew = ({ match }) => {\r\n  const classes = useStyles();\r\n  const { materialCategory, courseArea, courseSubArea, topicId } = match.params;\r\n  const content = useSelector((state) => state.content);\r\n  const [edit, setEdit] = useState(false);\r\n  const { isAuthenticated, username } = useSelector(\r\n    (state) => state.authentication\r\n  );\r\n  const instanceRef = useRef(null);\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (content && content[courseArea]?.[courseSubArea]?.[materialCategory]) {\r\n      const temp = content[courseArea][courseSubArea][materialCategory].find(\r\n        (i) => i[\"_id\"] === topicId\r\n      );\r\n      setData(temp);\r\n    }\r\n  }, [courseArea, courseSubArea, materialCategory, topicId, content]);\r\n\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <div className={classes.articleContent}>\r\n        {data?.contentData ? (\r\n          <>\r\n            <NewEditor data={data} existing={true} />\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayNew;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\DisplayNew1.jsx",["238","239","240","241","242","243","244","245","246"],"import { useRef, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EditorJs from \"react-editor-js\";\r\nimport { EDITOR_JS_TOOLS } from \"../../utils/platformConfig\";\r\nimport SpeedDial from \"./SpeedDial\";\r\nimport { postContents } from \"../../state/actions/content\";\r\nimport Display from \"./Display\";\r\n\r\nconst datass = {\r\n  blocks: [\r\n    {\r\n      type: \"header\",\r\n      data: {\r\n        text: \"Editor.js\",\r\n        level: 2,\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          \"Hey. Meet the new Editor. On this page you can see it in action — try to edit this text.\",\r\n      },\r\n    },\r\n    {\r\n      type: \"header\",\r\n      data: {\r\n        text: \"Key features\",\r\n        level: 3,\r\n      },\r\n    },\r\n    {\r\n      type: \"list\",\r\n      data: {\r\n        style: \"unordered\",\r\n        items: [\r\n          \"It is a block-styled editor\",\r\n          \"It returns clean data output in JSON\",\r\n          \"Designed to be extendable and pluggable with a simple API\",\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      type: \"header\",\r\n      data: {\r\n        text: \"What does it mean «block-styled editor»\",\r\n        level: 3,\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          'Workspace in classic editors is made of a single contenteditable element, used to create different HTML markups. Editor.js <mark class=\"cdx-marker\">workspace consists of separate Blocks: paragraphs, headings, images, lists, quotes, etc</mark>. Each of them is an independent contenteditable element (or more complex structure) provided by Plugin and united by Editor\\'s Core.',\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          'There are dozens of <a href=\"https://github.com/editor-js\">ready-to-use Blocks</a> and the <a href=\"https://editorjs.io/creating-a-block-tool\">simple API</a> for creation any Block you need. For example, you can implement Blocks for Tweets, Instagram posts, surveys and polls, CTA-buttons and even games.',\r\n      },\r\n    },\r\n    {\r\n      type: \"header\",\r\n      data: {\r\n        text: \"What does it mean clean data output\",\r\n        level: 3,\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          \"Classic WYSIWYG-editors produce raw HTML-markup with both content data and content appearance. On the contrary, Editor.js outputs JSON object with data of each Block. You can see an example below\",\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          'Given data can be used as you want: render with HTML for <code class=\"inline-code\">Web clients</code>, render natively for <code class=\"inline-code\">mobile apps</code>, create markup for <code class=\"inline-code\">Facebook Instant Articles</code> or <code class=\"inline-code\">Google AMP</code>, generate an <code class=\"inline-code\">audio version</code> and so on.',\r\n      },\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          \"Clean data is useful to sanitize, validate and process on the backend.\",\r\n      },\r\n    },\r\n    {\r\n      type: \"delimiter\",\r\n      data: {},\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      data: {\r\n        text:\r\n          \"We have been working on this project more than three years. Several large media projects help us to test and debug the Editor, to make it's core more stable. At the same time we significantly improved the API. Now, it can be used to create any plugin for any task. Hope you enjoy. 😏\",\r\n      },\r\n    },\r\n    {\r\n      type: \"image\",\r\n      data: {\r\n        file: {\r\n          url: \"https://capella.pics/6d8f1a84-9544-4afa-b806-5167d45baf7c.jpg\",\r\n        },\r\n        caption: \"\",\r\n        withBorder: true,\r\n        stretched: false,\r\n        withBackground: false,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst DisplayNew = ({ datas }) => {\r\n  console.log(\"0----------------\");\r\n  console.log(datas);\r\n  console.log(typeof datas);\r\n  console.log(\"0----------------\");\r\n  console.log(datass);\r\n  console.log(typeof datass);\r\n  return (\r\n    <EditorJs\r\n      data={datas}\r\n      tools={EDITOR_JS_TOOLS}\r\n      // autofocus\r\n      // instanceRef={(instance) => (instanceRef.current = instance)}\r\n      readOnly\r\n    />\r\n  );\r\n};\r\n\r\nexport default DisplayNew;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\BackButton.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\Dialog.jsx",["247"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide({\r\n  shouldOpen,\r\n  leftButtonText,\r\n  rightButtonText,\r\n  handleButtonClicked,\r\n  messageBody1,\r\n  messageBody2,\r\n}) {\r\n  const [open, setOpen] = React.useState(shouldOpen);\r\n\r\n  const handleClose = (buttonType) => {\r\n    setOpen(false);\r\n    handleButtonClicked(\"none\");\r\n  };\r\n  const handleDialog = (buttonType) => {\r\n    handleButtonClicked(buttonType);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={shouldOpen || false}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle style={{ fontWeight: \"800\" }}>{messageBody1}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText style={{ fontWeight: \"500\" }}>\r\n            {messageBody2}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleDialog(\"left\")} color=\"primary\">\r\n            {leftButtonText}\r\n          </Button>\r\n          <Button onClick={() => handleDialog(\"right\")} color=\"primary\">\r\n            {rightButtonText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\message.js",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\layout\\Logout.jsx",["248"],"import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LOGOUT } from \"../state/actions/types\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch({ type: LOGOUT });\r\n    history.replace(\"/login\");\r\n  }, []);\r\n\r\n  return <div> Logout</div>;\r\n};\r\n\r\nexport default Logout;\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\auth\\Register.jsx",["249","250","251","252"],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\container\\auth\\Login.js",["253"],"import { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Divider } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../state/actions/authentication\";\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { refresh } from \"../../state/actions/authentication\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        mastercsconcepts\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    width: \"50ch\",\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit } = useForm();\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: state.authentication.isAuthenticated,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    intialCall();\r\n  }, []);\r\n  const intialCall = () => {\r\n    const token = localStorage.getItem(\"token\") || null;\r\n    if (token) {\r\n      dispatch(refresh({ token }));\r\n    } else {\r\n      // history.replace(\"/login\");\r\n    }\r\n  };\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const [loginForm, setLoginForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleChange = (event) => {\r\n    setLoginForm({ ...loginForm, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    data.preventDefault();\r\n    dispatch(login(loginForm));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    history.replace(\"/home\");\r\n  } else {\r\n    console.log(\"Couldn't login\");\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={loginForm.email}\r\n            onChange={handleChange}\r\n            // autoComplete=\"email\"\r\n            autoFocus\r\n            inputRef={register({\r\n              required: true,\r\n              max: 10,\r\n              min: 5,\r\n            })}\r\n          />\r\n          <FormControl\r\n            className={clsx(classes.margin, classes.textField)}\r\n            variant=\"outlined\"\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              fullWidth\r\n              margin=\"none\"\r\n              name=\"password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={loginForm.password}\r\n              onChange={handleChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {loginForm.showPassword ? (\r\n                      <Visibility />\r\n                    ) : (\r\n                      <VisibilityOff />\r\n                    )}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"secondary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"10px\" }}>\r\n              <Link href=\"/forgot-password\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n          {/* <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid> */}\r\n        </form>\r\n      </div>\r\n      <Divider />\r\n      <br />\r\n      <Button\r\n        fullWidth\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.login}\r\n        onClick={() => history.replace(\"/register\")}\r\n      >\r\n        Register\r\n      </Button>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\components\\common\\UnderConstruction.jsx",[],"D:\\Users\\ashekhar\\Desktop\\learn\\github\\mastercsconcepts\\ui\\src\\utils\\Regex.js",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":12,"column":8,"nodeType":"260","messageId":"261","endLine":12,"endColumn":16},{"ruleId":"258","severity":1,"message":"262","line":13,"column":8,"nodeType":"260","messageId":"261","endLine":13,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":18,"column":6,"nodeType":"265","endLine":18,"endColumn":8,"suggestions":"266"},{"ruleId":"254","replacedBy":"267"},{"ruleId":"256","replacedBy":"268"},{"ruleId":"258","severity":1,"message":"269","line":44,"column":15,"nodeType":"260","messageId":"261","endLine":44,"endColumn":19},{"ruleId":"258","severity":1,"message":"270","line":318,"column":7,"nodeType":"260","messageId":"261","endLine":318,"endColumn":24},{"ruleId":"258","severity":1,"message":"271","line":1,"column":10,"nodeType":"260","messageId":"261","endLine":1,"endColumn":19},{"ruleId":"258","severity":1,"message":"272","line":15,"column":8,"nodeType":"260","messageId":"261","endLine":15,"endColumn":16},{"ruleId":"258","severity":1,"message":"273","line":75,"column":28,"nodeType":"260","messageId":"261","endLine":75,"endColumn":32},{"ruleId":"258","severity":1,"message":"274","line":75,"column":34,"nodeType":"260","messageId":"261","endLine":75,"endColumn":42},{"ruleId":"258","severity":1,"message":"275","line":2,"column":30,"nodeType":"260","messageId":"261","endLine":2,"endColumn":39},{"ruleId":"258","severity":1,"message":"276","line":2,"column":41,"nodeType":"260","messageId":"261","endLine":2,"endColumn":50},{"ruleId":"263","severity":1,"message":"277","line":52,"column":6,"nodeType":"265","endLine":52,"endColumn":16,"suggestions":"278"},{"ruleId":"258","severity":1,"message":"279","line":5,"column":3,"nodeType":"260","messageId":"261","endLine":5,"endColumn":14},{"ruleId":"258","severity":1,"message":"280","line":8,"column":3,"nodeType":"260","messageId":"261","endLine":8,"endColumn":13},{"ruleId":"258","severity":1,"message":"281","line":10,"column":8,"nodeType":"260","messageId":"261","endLine":10,"endColumn":20},{"ruleId":"258","severity":1,"message":"280","line":3,"column":22,"nodeType":"260","messageId":"261","endLine":3,"endColumn":32},{"ruleId":"258","severity":1,"message":"282","line":3,"column":34,"nodeType":"260","messageId":"261","endLine":3,"endColumn":41},{"ruleId":"258","severity":1,"message":"283","line":4,"column":8,"nodeType":"260","messageId":"261","endLine":4,"endColumn":16},{"ruleId":"258","severity":1,"message":"284","line":5,"column":10,"nodeType":"260","messageId":"261","endLine":5,"endColumn":25},{"ruleId":"258","severity":1,"message":"285","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":16},{"ruleId":"258","severity":1,"message":"286","line":41,"column":10,"nodeType":"260","messageId":"261","endLine":41,"endColumn":14},{"ruleId":"258","severity":1,"message":"287","line":41,"column":16,"nodeType":"260","messageId":"261","endLine":41,"endColumn":23},{"ruleId":"258","severity":1,"message":"288","line":42,"column":11,"nodeType":"260","messageId":"261","endLine":42,"endColumn":26},{"ruleId":"258","severity":1,"message":"274","line":42,"column":28,"nodeType":"260","messageId":"261","endLine":42,"endColumn":36},{"ruleId":"258","severity":1,"message":"289","line":45,"column":9,"nodeType":"260","messageId":"261","endLine":45,"endColumn":20},{"ruleId":"258","severity":1,"message":"290","line":1,"column":10,"nodeType":"260","messageId":"261","endLine":1,"endColumn":16},{"ruleId":"258","severity":1,"message":"271","line":1,"column":18,"nodeType":"260","messageId":"261","endLine":1,"endColumn":27},{"ruleId":"258","severity":1,"message":"291","line":1,"column":29,"nodeType":"260","messageId":"261","endLine":1,"endColumn":37},{"ruleId":"258","severity":1,"message":"292","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":21},{"ruleId":"258","severity":1,"message":"293","line":2,"column":23,"nodeType":"260","messageId":"261","endLine":2,"endColumn":34},{"ruleId":"258","severity":1,"message":"294","line":3,"column":10,"nodeType":"260","messageId":"261","endLine":3,"endColumn":20},{"ruleId":"258","severity":1,"message":"295","line":6,"column":8,"nodeType":"260","messageId":"261","endLine":6,"endColumn":17},{"ruleId":"258","severity":1,"message":"296","line":7,"column":10,"nodeType":"260","messageId":"261","endLine":7,"endColumn":22},{"ruleId":"258","severity":1,"message":"297","line":8,"column":8,"nodeType":"260","messageId":"261","endLine":8,"endColumn":15},{"ruleId":"258","severity":1,"message":"298","line":22,"column":10,"nodeType":"260","messageId":"261","endLine":22,"endColumn":14},{"ruleId":"263","severity":1,"message":"299","line":12,"column":6,"nodeType":"265","endLine":12,"endColumn":8,"suggestions":"300"},{"ruleId":"258","severity":1,"message":"301","line":88,"column":24,"nodeType":"260","messageId":"261","endLine":88,"endColumn":39},{"ruleId":"302","severity":1,"message":"303","line":141,"column":32,"nodeType":"304","messageId":"305","endLine":141,"endColumn":34},{"ruleId":"263","severity":1,"message":"264","line":158,"column":6,"nodeType":"265","endLine":158,"endColumn":8,"suggestions":"306"},{"ruleId":"258","severity":1,"message":"269","line":175,"column":15,"nodeType":"260","messageId":"261","endLine":175,"endColumn":19},{"ruleId":"263","severity":1,"message":"264","line":79,"column":6,"nodeType":"265","endLine":79,"endColumn":8,"suggestions":"307"},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'intialCall'. Either include it or remove the dependency array.","ArrayExpression",["310"],["308"],["309"],"'data' is assigned a value but never used.","'sidebarBottomList' is assigned a value but never used.","'useEffect' is defined but never used.","'MenuIcon' is defined but never used.","'name' is assigned a value but never used.","'username' is assigned a value but never used.","'TextField' is defined but never used.","'InputBase' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setState' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.",["311"],"'CardActions' is defined but never used.","'IconButton' is defined but never used.","'FavoriteIcon' is defined but never used.","'Tooltip' is defined but never used.","'EditorJs' is defined but never used.","'EDITOR_JS_TOOLS' is defined but never used.","'EditIcon' is defined but never used.","'edit' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'instanceRef' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useHistory' is defined but never used.","'SpeedDial' is defined but never used.","'postContents' is defined but never used.","'Display' is defined but never used.","'open' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["312"],"'setErrorMessage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["313"],["314"],"no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"315","fix":"321"},{"desc":"315","fix":"322"},"Update the dependencies array to be: [intialCall]",{"range":"323","text":"324"},"Update the dependencies array to be: [data, existing]",{"range":"325","text":"326"},"Update the dependencies array to be: [dispatch, history]",{"range":"327","text":"328"},{"range":"329","text":"324"},{"range":"330","text":"324"},[665,667],"[intialCall]",[1504,1514],"[data, existing]",[363,365],"[dispatch, history]",[4611,4613],[2630,2632]]