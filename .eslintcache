[{"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\index.js":"1","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\App.js":"2","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\reportWebVitals.js":"3","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\store\\index.js":"4","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\pages\\Login.js":"5","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Layout.js":"6","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\components\\routing\\PrivateRoute.js":"7","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\reducers\\index.js":"8","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Navbar.js":"9","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Appbar.jsx":"10","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\actions\\types.js":"11","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppbarLinks.jsx":"12","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\SecondaryAppBar.jsx":"13","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppBar.jsx":"14","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppBarLinks.jsx":"15","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\components\\common\\Popover.jsx":"16","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\reducers\\platformReducer.js":"17","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\actions\\platformActions.js":"18","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\index.jsx":"19","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\Chat.jsx":"20","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\Card.jsx":"21","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\ChatBox.jsx":"22","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\functions\\function.js":"23","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\utils\\Regex.js":"24","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\utils\\mock.js":"25","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Sidebar.jsx":"26"},{"size":524,"mtime":1611252711691,"results":"27","hashOfConfig":"28"},{"size":2204,"mtime":1611252711677,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":568,"mtime":1611252711703,"results":"31","hashOfConfig":"28"},{"size":4533,"mtime":1612596154832,"results":"32","hashOfConfig":"28"},{"size":1522,"mtime":1612894313376,"results":"33","hashOfConfig":"28"},{"size":1377,"mtime":1612600138603,"results":"34","hashOfConfig":"28"},{"size":337,"mtime":1611396303232,"results":"35","hashOfConfig":"28"},{"size":5615,"mtime":1611252711693,"results":"36","hashOfConfig":"28"},{"size":7478,"mtime":1611429410433,"results":"37","hashOfConfig":"28"},{"size":226,"mtime":1612597930122,"results":"38","hashOfConfig":"28"},{"size":2532,"mtime":1611402974288,"results":"39","hashOfConfig":"28"},{"size":1504,"mtime":1611401012796,"results":"40","hashOfConfig":"28"},{"size":7569,"mtime":1612596399480,"results":"41","hashOfConfig":"28"},{"size":2223,"mtime":1612598773875,"results":"42","hashOfConfig":"28"},{"size":4533,"mtime":1611420131042,"results":"43","hashOfConfig":"28"},{"size":725,"mtime":1612598194302,"results":"44","hashOfConfig":"28"},{"size":109,"mtime":1611400189431,"results":"45","hashOfConfig":"28"},{"size":699,"mtime":1612894457896,"results":"46","hashOfConfig":"28"},{"size":2296,"mtime":1608620319881,"results":"47","hashOfConfig":"28"},{"size":2433,"mtime":1611775371888,"results":"48","hashOfConfig":"28"},{"size":2077,"mtime":1611429084245,"results":"49","hashOfConfig":"28"},{"size":1147,"mtime":1611252711690,"results":"50","hashOfConfig":"28"},{"size":512,"mtime":1611252711706,"results":"51","hashOfConfig":"28"},{"size":3917,"mtime":1612600702986,"results":"52","hashOfConfig":"28"},{"size":6770,"mtime":1612601089013,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"hrz7w9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\index.js",[],["115","116"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\App.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\reportWebVitals.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\store\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\pages\\Login.js",["117"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\n// import illustration from \"../assets/illustration.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#ffffff\",\r\n    overflowY: \"hidden\",\r\n  },\r\n  gridContainer: { height: \"100vh\" },\r\n\r\n  image: {\r\n    height: \"102%\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"640px\",\r\n    margin: \"0 auto\",\r\n    backgroundColor: \"3ffffff\",\r\n  },\r\n  form: {\r\n    width: \"80%\", // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"inherit\",\r\n  },\r\n  stack: {\r\n    zIndex: 1,\r\n    color: \"rgb(0,0,0)\",\r\n  },\r\n  loginTitle: {\r\n    zIndex: 1,\r\n    color: \"rgba(0,0,0,0.9)\",\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: true,\r\n  }));\r\n  // const userDetails = useSelector((state) => state.authentication.user);\r\n\r\n  // const [loginForm, setLoginForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    // setLoginForm({ ...loginForm, [prop]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    data.preventDefault();\r\n    history.replace(\"/home\");\r\n  };\r\n\r\n  // if (isAuthenticated) {\r\n  //   if (userDetails.role === \"client\") {\r\n  //     history.replace(\"/new-request\");\r\n  //   } else {\r\n  //     history.replace(\"/pending-requests\");\r\n  //   }\r\n  // }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Hidden smDown>\r\n          <Grid item md={8} lg={8} cl={8} className={classes.gridImage}>\r\n            <img\r\n              // src={illustration}\r\n              alt=\"CSINOUT\"\r\n              className={classes.image}\r\n            />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} md={4} lg={4} xl={4}>\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.stack}>\r\n              Altimetrik Alumini Portal\r\n            </Typography>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              className={classes.loginTitle}\r\n            >\r\n              Login\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"email\"\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={handleChange(\"email\")}\r\n                inputRef={register({\r\n                  required: true,\r\n                  max: 10,\r\n                  min: 5,\r\n                })}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Enter Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange(\"password\")}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disableElevation\r\n                onClick={onSubmit}\r\n                // disabled={!(loginForm.email && loginForm.password)}\r\n              >\r\n                Login\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Layout.js",["118"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\components\\routing\\PrivateRoute.js",["119"],"import { useEffect } from \"react\";\r\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MULTIPLE_VALUES } from \"../../state/actions/types\";\r\nimport { courseList } from \"../../utils/mock\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: true,\r\n  }));\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const courseDetails = history.location.pathname.split(\"/\");\r\n    if (\r\n      courseList[courseDetails[1]] &&\r\n      courseList[courseDetails[1]].find((i) => i.name === courseDetails[2])\r\n    ) {\r\n      const index = courseList[courseDetails[1]].findIndex(\r\n        (i) => i.name === courseDetails[2]\r\n      );\r\n      dispatch({\r\n        type: MULTIPLE_VALUES,\r\n        payload: {\r\n          courseArea: courseDetails[1],\r\n          courseSubArea: courseList[courseDetails[1]][index],\r\n          sideBarOption: courseDetails[3],\r\n        },\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        // isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/home\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\reducers\\index.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Navbar.js",["120"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  CssBaseline,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const sidebarTopList = [\r\n//   {\r\n//     link: \"/home\",\r\n//     key: \"Home\",\r\n//     icon: <HomeIcon />,\r\n//     index: 0,\r\n//   },\r\n//   {\r\n//     link: \"/self-service\",\r\n//     key: \"Self Service\",\r\n//     icon: <TouchAppIcon />,\r\n//     index: 1,\r\n//   },\r\n//   {\r\n//     link: \"/downloads\",\r\n//     key: \"Downloads\",\r\n//     icon: <GetAppIcon />,\r\n//     index: 2,\r\n//   },\r\n//   {\r\n//     link: \"/jobs\",\r\n//     key: \"Jobs\",\r\n//     icon: <WorkIcon />,\r\n//     index: 3,\r\n//   },\r\n//   {\r\n//     link: \"/qliq-difference\",\r\n//     key: \"qliq\",\r\n//     icon: <WorkIcon />,\r\n//     index: 4,\r\n//   },\r\n// ];\r\n// const sidebarBottomList = [\r\n//   {\r\n//     link: \"/update-profile\",\r\n//     key: \"Update Profile\",\r\n//     icon: <UpdateIcon />,\r\n//     index: 0,\r\n//   },\r\n//   {\r\n//     link: \"/login\",\r\n//     key: \"logout\",\r\n//     icon: <ExitToAppIcon />,\r\n//     index: 0,\r\n//   },\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#F26522\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    backgroundColor: \"#F26522\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#F26522\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    backgroundColor: \"#F26522\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    backgroundColor: \"#F26522\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  image: {\r\n    width: \"212px\",\r\n  },\r\n  logo_small: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n  },\r\n  logo: {\r\n    width: \"100px\",\r\n    height: \"60px\",\r\n  },\r\n  listTop: {\r\n    overflow: \"hidden\",\r\n    // backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  listBottom: {\r\n    overflow: \"hidden\",\r\n    // backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  logout: {\r\n    marginLeft: \"auto\",\r\n    // color: \"#ffffff\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #fff\",\r\n    color: \"white\",\r\n    // borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  isSelectedListItem: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const drawer = (list, style) => (\r\n    <List className={classes[style]}>\r\n      {list.map((item) => (\r\n        <Link to={item.link} className={classes.link} key={item.key}>\r\n          <ListItem\r\n            button\r\n            key={item.key}\r\n            className={\r\n              history.location.pathname === item.link ? classes.isSelected : \"\"\r\n            }\r\n          >\r\n            <ListItemIcon\r\n              className={\r\n                history.location.pathname === item.link\r\n                  ? classes.isSelectedListItem\r\n                  : \"\"\r\n              }\r\n            >\r\n              {item.icon}\r\n            </ListItemIcon>\r\n            <ListItemText primary={item.key} />\r\n          </ListItem>\r\n        </Link>\r\n      ))}\r\n    </List>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        onMouseEnter={handleDrawerOpen}\r\n        onMouseLeave={handleDrawerClose}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton>\r\n            {open\r\n              ? // <img src={logo} alt=\"Logo\" className={classes.image} />\r\n                \"Large\"\r\n              : // <img src={logo_small} alt=\"Logo\" className={classes.logo_small} />\r\n                \"Small\"}\r\n          </IconButton>\r\n        </div>\r\n        {/* {drawer(sidebarTopList, \"listTop\")}\r\n        {drawer(sidebarBottomList, \"listBottom\")} */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n",["121","122"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Appbar.jsx",["123","124","125","126","127"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\actions\\types.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppbarLinks.jsx",["128","129","130","131","132","133","134"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\SecondaryAppBar.jsx",["135","136","137","138"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppBar.jsx",["139","140","141","142","143"],"import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  Typography,\r\n  Divider,\r\n  CssBaseline,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport logo from \"../assets/logo.png\";\r\nimport AppbarLink from \"./AppBarLinks\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport Theory from \"../container/theory\";\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  rightContent: {\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"rgba(255,0,0, 1)\",\r\n    // \"&:hover\": {\r\n    //   backgroundColor: fade(\"rgba(255,0,0)\", 0.9),\r\n    // },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"#ffffff\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    color: \"rgba(255,255,255, 1)\",\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  list: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #F26522\",\r\n    borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  // isSelectedListItem: {\r\n  //   color: \"white\",\r\n  // },\r\n}));\r\n\r\nconst sidebarTopList = [\r\n  {\r\n    link: \"theory\",\r\n    key: \"Theory\",\r\n    icon: <LocalLibraryIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"practical\",\r\n    key: \"Practical\",\r\n    icon: <BuildIcon />,\r\n    index: 1,\r\n  },\r\n  {\r\n    link: \"blogs\",\r\n    key: \"Blogs\",\r\n    icon: <LibraryBooksIcon />,\r\n    index: 2,\r\n  },\r\n  {\r\n    link: \"contributors\",\r\n    key: \"Contributors\",\r\n    icon: <GroupAddIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"downloads\",\r\n    key: \"Downloads\",\r\n    icon: <GetAppIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"subscribe\",\r\n    key: \"Subscribe\",\r\n    icon: <BookmarkIcon />,\r\n    index: 4,\r\n  },\r\n];\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const { courseArea, courseSubArea } = useSelector((state) => state.platform);\r\n  const [open, setOpen] = useState(true);\r\n  let history = useHistory();\r\n  console.log(history.location.pathname);\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <Tooltip title={courseSubArea[\"displayName\"]}>\r\n        <Typography className={classes.typography} align=\"center\" noWrap>\r\n          {courseSubArea[\"displayName\"]}\r\n        </Typography>\r\n      </Tooltip>\r\n\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        {sidebarTopList.map((item) => (\r\n          <Link\r\n            to={`/${courseArea}/${courseSubArea.name}/${item.link}`}\r\n            className={classes.link}\r\n            key={item.key}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={item.key}\r\n              className={\r\n                history.location.pathname ===\r\n                `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                  ? classes.isSelected\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ListItemIcon\r\n                className={\r\n                  history.location.pathname ===\r\n                  `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                    ? classes.isSelectedListItem\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.key} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <div className={classes.chevron}>\r\n        <IconButton onClick={handleDrawer}>\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <img src={logo} alt=\"logo\" style={{ height: \"20px\" }} />\r\n          <div className={classes.rightContent}>\r\n            <div>\r\n              <AppbarLink />\r\n            </div>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* {courseArea ? (\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Theory /> */}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\AppBarLinks.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\components\\common\\Popover.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\reducers\\platformReducer.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\state\\actions\\platformActions.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\index.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\Chat.jsx",[],["144","145"],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\Card.jsx",["146","147","148"],"import React from \"react\";\r\nimport { makeStyles, Chip } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport { CamelCaseToString } from \"../../functions/function\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 275,\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    \"&>*\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  chip: {\r\n    marginLeft: \"auto\",\r\n    \"&>*\": {\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  inReview: {\r\n    backgroundColor: \"#0460a9\",\r\n  },\r\n  pending: {\r\n    backgroundColor: \"#0460a9\",\r\n  },\r\n  rejected: {\r\n    backgroundColor: \"#ff3d00\",\r\n  },\r\n  approved: {\r\n    backgroundColor: \"#4caf50\",\r\n  },\r\n  reApply: { color: \"#000000\" },\r\n  notApplicable: { color: \"#000000\" },\r\n}));\r\nexport default function Cards({ items }) {\r\n  const classes = useStyles();\r\n  const {\r\n    // eslint-disable-next-line\r\n    title,\r\n    publishedOn,\r\n    imgUrl,\r\n    description,\r\n  } = items;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <div className={classes.header}>\r\n          <Typography className={classes.title}>{title}</Typography>\r\n          <div className={classes.chip}>\r\n            {/* <Chip\r\n              label={CamelCaseToString(status)}\r\n              className={classes[status]}\r\n            /> */}\r\n            <img src={imgUrl} alt={title} />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <Typography variant=\"body2\">{description}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {`Published on :- ${publishedOn}`}\r\n        </Typography>\r\n        {/* <Typography variant=\"body2\">{`Assigned To :- ${assignee}`}</Typography> */}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"Upload\">\r\n          {/* <ChatIcon onClick={handleChat} /> */}\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\container\\theory\\ChatBox.jsx",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\functions\\function.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\utils\\Regex.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\utils\\mock.js",[],"D:\\Users\\ashekhar\\Desktop\\github\\mastercsconcepts\\src\\layout\\Sidebar.jsx",["149","150","151","152","153","154","155","156"],"import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  InputBase,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  Typography,\r\n  Divider,\r\n  CssBaseline,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport logo from \"../assets/logo.png\";\r\nimport AppbarLink from \"./AppBarLinks\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport LibraryBooksIcon from \"@material-ui/icons/LibraryBooks\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport Theory from \"../container/theory\";\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  rightContent: {\r\n    marginRight: \"0px\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"rgba(255,0,0, 1)\",\r\n    // \"&:hover\": {\r\n    //   backgroundColor: fade(\"rgba(255,0,0)\", 0.9),\r\n    // },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"#ffffff\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    color: \"rgba(255,255,255, 1)\",\r\n    fontWeight: \"bold\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"25ch\",\r\n      },\r\n    },\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    top: \"65px\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n  },\r\n  list: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    paddingTop: \"0px\",\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"#000000\",\r\n  },\r\n  isSelected: {\r\n    borderRight: \"2px solid #F26522\",\r\n    borderColor: \"#F26522\",\r\n    // \"&:hover\": {\r\n    //   color: \"#000000\",\r\n    //   backgroundColor: \"#F26522\",\r\n    // },\r\n  },\r\n  // isSelectedListItem: {\r\n  //   color: \"white\",\r\n  // },\r\n}));\r\n\r\nconst sidebarTopList = [\r\n  {\r\n    link: \"theory\",\r\n    key: \"Theory\",\r\n    icon: <LocalLibraryIcon />,\r\n    index: 0,\r\n  },\r\n  {\r\n    link: \"practical\",\r\n    key: \"Practical\",\r\n    icon: <BuildIcon />,\r\n    index: 1,\r\n  },\r\n  {\r\n    link: \"blogs\",\r\n    key: \"Blogs\",\r\n    icon: <LibraryBooksIcon />,\r\n    index: 2,\r\n  },\r\n  {\r\n    link: \"contributors\",\r\n    key: \"Contributors\",\r\n    icon: <GroupAddIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"downloads\",\r\n    key: \"Downloads\",\r\n    icon: <GetAppIcon />,\r\n    index: 4,\r\n  },\r\n  {\r\n    link: \"subscribe\",\r\n    key: \"Subscribe\",\r\n    icon: <BookmarkIcon />,\r\n    index: 4,\r\n  },\r\n];\r\n\r\nexport default function SearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const { courseArea, courseSubArea } = useSelector((state) => state.platform);\r\n  const [open, setOpen] = useState(true);\r\n  let history = useHistory();\r\n  const handleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n  const drawer = (\r\n    <div>\r\n      <Tooltip title={courseSubArea[\"displayName\"]}>\r\n        <Typography className={classes.typography} align=\"center\" noWrap>\r\n          {courseSubArea[\"displayName\"]}\r\n        </Typography>\r\n      </Tooltip>\r\n\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        {sidebarTopList.map((item) => (\r\n          <Link\r\n            to={`/${courseArea}/${courseSubArea.name}/${item.link}`}\r\n            className={classes.link}\r\n            key={item.key}\r\n          >\r\n            <ListItem\r\n              button\r\n              key={item.key}\r\n              className={\r\n                history.location.pathname ===\r\n                `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                  ? classes.isSelected\r\n                  : \"\"\r\n              }\r\n            >\r\n              <ListItemIcon\r\n                className={\r\n                  history.location.pathname ===\r\n                  `/${courseArea}/${courseSubArea.name}/${item.link}`\r\n                    ? classes.isSelectedListItem\r\n                    : \"\"\r\n                }\r\n              >\r\n                {item.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.key} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n      {/* <div className={classes.chevron}>\r\n        <IconButton onClick={handleDrawer}>\r\n          {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div> */}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {courseArea && courseSubArea ? (\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* <Theory /> */}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":59,"column":11,"nodeType":"163","messageId":"164","endLine":59,"endColumn":26},{"ruleId":"161","severity":1,"message":"165","line":2,"column":35,"nodeType":"163","messageId":"164","endLine":2,"endColumn":48},{"ruleId":"166","severity":1,"message":"167","line":32,"column":6,"nodeType":"168","endLine":32,"endColumn":8,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"170","line":177,"column":9,"nodeType":"163","messageId":"164","endLine":177,"endColumn":15},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"161","severity":1,"message":"173","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"174","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"175","line":7,"column":10,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"176","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"177","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":23},{"ruleId":"161","severity":1,"message":"178","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":27},{"ruleId":"161","severity":1,"message":"179","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":29},{"ruleId":"161","severity":1,"message":"180","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":28},{"ruleId":"161","severity":1,"message":"181","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":30},{"ruleId":"161","severity":1,"message":"182","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"183","line":40,"column":10,"nodeType":"163","messageId":"164","endLine":40,"endColumn":17},{"ruleId":"161","severity":1,"message":"184","line":42,"column":9,"nodeType":"163","messageId":"164","endLine":42,"endColumn":21},{"ruleId":"161","severity":1,"message":"174","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"185","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":19},{"ruleId":"161","severity":1,"message":"186","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":11},{"ruleId":"161","severity":1,"message":"187","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":17},{"ruleId":"161","severity":1,"message":"188","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":12},{"ruleId":"161","severity":1,"message":"189","line":14,"column":3,"nodeType":"163","messageId":"164","endLine":14,"endColumn":9},{"ruleId":"161","severity":1,"message":"190","line":29,"column":8,"nodeType":"163","messageId":"164","endLine":29,"endColumn":14},{"ruleId":"161","severity":1,"message":"191","line":192,"column":9,"nodeType":"163","messageId":"164","endLine":192,"endColumn":21},{"ruleId":"161","severity":1,"message":"170","line":195,"column":9,"nodeType":"163","messageId":"164","endLine":195,"endColumn":15},{"ruleId":"157","replacedBy":"192"},{"ruleId":"159","replacedBy":"193"},{"ruleId":"161","severity":1,"message":"194","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"195","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"196","line":9,"column":10,"nodeType":"163","messageId":"164","endLine":9,"endColumn":27},{"ruleId":"161","severity":1,"message":"197","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":9},{"ruleId":"161","severity":1,"message":"198","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":10},{"ruleId":"161","severity":1,"message":"199","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":12},{"ruleId":"161","severity":1,"message":"200","line":20,"column":8,"nodeType":"163","messageId":"164","endLine":20,"endColumn":18},{"ruleId":"161","severity":1,"message":"201","line":21,"column":8,"nodeType":"163","messageId":"164","endLine":21,"endColumn":12},{"ruleId":"161","severity":1,"message":"202","line":22,"column":8,"nodeType":"163","messageId":"164","endLine":22,"endColumn":18},{"ruleId":"161","severity":1,"message":"190","line":29,"column":8,"nodeType":"163","messageId":"164","endLine":29,"endColumn":14},{"ruleId":"161","severity":1,"message":"191","line":191,"column":9,"nodeType":"163","messageId":"164","endLine":191,"endColumn":21},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["205"],"'drawer' is assigned a value but never used.",["203"],["204"],"'IconButton' is defined but never used.","'Typography' is defined but never used.","'fade' is defined but never used.","'MenuIcon' is defined but never used.","'SecondaryAppbar' is defined but never used.","'FormatAlignLeftIcon' is defined but never used.","'FormatAlignCenterIcon' is defined but never used.","'FormatAlignRightIcon' is defined but never used.","'FormatAlignJustifyIcon' is defined but never used.","'HomeIcon' is defined but never used.","'formats' is assigned a value but never used.","'handleFormat' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'clsx' is defined but never used.","'Drawer' is defined but never used.","'Theory' is defined but never used.","'handleDrawer' is assigned a value but never used.",["203"],["204"],"'Chip' is defined but never used.","'ChatIcon' is defined but never used.","'CamelCaseToString' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","'logo' is defined but never used.","'AppbarLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},"Update the dependencies array to be: [dispatch, history.location.pathname]",{"range":"208","text":"209"},[1083,1085],"[dispatch, history.location.pathname]"]